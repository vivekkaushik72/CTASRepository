#
#Set the following property to specify the class implementing the javax.usb.UsbServices interface
#

javax.usb.services = com.mcreations.usb.windows.WindowsUsbServices

# boolean : true = do trace
com.ibm.jusb.os.windows.WindowsUsbServices.JNI.tracing=true

# trace level (0-5), the higher, the more verbose
#define LOG_CRITICAL  0x00 /* critical messages, this is the default */
#define LOG_ERROR     0x01 /* error messages */
#define LOG_INFO      0x02 /* function internal */
#define LOG_FUNC      0x03 /* function entry/exit */
#define LOG_DEBUG     0x04 /* debugging */
#define LOG_OTHER     0x05 /* all other logging */

# milliseconds between two polls of the usb bus
#com.ibm.jusb.os.windows.WindowsUsbServices.topologyUpdateDelay=5000
com.ibm.jusb.os.windows.WindowsUsbServices.topologyUpdateDelay=100

com.ibm.jusb.os.windows.WindowsUsbServices.JNI.trace_level=5

# the following are different categories of messages which
# are generated in the native library, use booleans to switch them
# on/off
#
# you can combine them with the trace_level to achieve different levels
# of verbosity
#
# hotplug = initialisation and device addition/removal
# 	trace_levels: 
#		0 = critical hotplug errors
#		1 = hotplug errors
#		2 = connect/disconnect notices
# 		3 = device information
#		4 = additional debug information
#
# xfer = transfer
# 	trace_levels: 
#		0 = critical transfer errors
#		1 = transfer errors
#		2 = transfer request received/completed
# 		3 = metadata (device, endpoint, setup, etc)
#		4 = raw data only
#		5 = additional debug information
#
# urb = USB Request Block
# 	trace_levels:
#		0 = critical urb errors
#		1 = urb errors
#		2 = request block fields
# 		3 = request block fields
#
com.ibm.jusb.os.windows.WindowsUsbServices.JNI.trace_default=true
com.ibm.jusb.os.windows.WindowsUsbServices.JNI.trace_hotplug=true
com.ibm.jusb.os.windows.WindowsUsbServices.JNI.trace_xfer=true
com.ibm.jusb.os.windows.WindowsUsbServices.JNI.trace_urb=true